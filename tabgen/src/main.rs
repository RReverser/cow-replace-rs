//! Generates the tables we use
//!
//! Determines property values based on `char`'s case conversion. This avoids
//! needing to download/parse UCD, but means that it can't support a newer
//! version of Unicode than what Rust itself supports. W

mod gen;

fn main() {
    use gen::*;
    let db = CaseChangeDb::new();
    let ranges = db.find_ranges();
    let (ranges, encoded) = db.splitify_ranges_for_encoding(&ranges);
    let emit = emit_tab("CHANGES_WHEN_LOOKUP_TAB", &encoded, &ranges);
    eprintln!("###begin output\n{emit}\n###end output");
    use core::fmt::Write;
    let mut file = String::new();
    writeln!(
        file,
        "// This file is automatically generated by `cow-utils-rs/tabgen`. Do not edit by hand."
    );
    writeln!(file);
    writeln!(file, "{}", emit);

    writeln!(
        file,
        "pub(super) type ChangesWhenTableType = [u32; {}];\n",
        encoded.len(),
    );
    let genver = core::char::UNICODE_VERSION;
    writeln!(
        file,
        "pub(super) const UNICODE_VERSION: (u8, u8, u8) = ({}, {}, {});\n",
        genver.0, genver.1, genver.2,
    );

    db.check_encoding(&ranges, &encoded);
}
